/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package pt.up.yap.lib;

public class YAPPrologPredicate extends YAPPredicate {
  private transient long swigCPtr;

  protected YAPPrologPredicate(long cPtr, boolean cMemoryOwn) {
    super(yapJNI.YAPPrologPredicate_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(YAPPrologPredicate obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        yapJNI.delete_YAPPrologPredicate(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public YAPPrologPredicate(YAPAtom name, long arity, YAPModule module, boolean tabled, boolean logical_updates, boolean local, boolean sourced, boolean discontiguous, boolean multiFile, boolean hidden, boolean untraceable, boolean unspyable, boolean meta, boolean sync, boolean quasi_quotable, long mega_clause) {
    this(yapJNI.new_YAPPrologPredicate__SWIG_0(YAPAtom.getCPtr(name), name, arity, YAPModule.getCPtr(module), module, tabled, logical_updates, local, sourced, discontiguous, multiFile, hidden, untraceable, unspyable, meta, sync, quasi_quotable, mega_clause), true);
  }

  public YAPPrologPredicate(YAPAtom name, long arity, YAPModule module, boolean tabled, boolean logical_updates, boolean local, boolean sourced, boolean discontiguous, boolean multiFile, boolean hidden, boolean untraceable, boolean unspyable, boolean meta, boolean sync, boolean quasi_quotable) {
    this(yapJNI.new_YAPPrologPredicate__SWIG_1(YAPAtom.getCPtr(name), name, arity, YAPModule.getCPtr(module), module, tabled, logical_updates, local, sourced, discontiguous, multiFile, hidden, untraceable, unspyable, meta, sync, quasi_quotable), true);
  }

  public YAPPrologPredicate(YAPAtom name, long arity, YAPModule module, boolean tabled, boolean logical_updates, boolean local, boolean sourced, boolean discontiguous, boolean multiFile, boolean hidden, boolean untraceable, boolean unspyable, boolean meta, boolean sync) {
    this(yapJNI.new_YAPPrologPredicate__SWIG_2(YAPAtom.getCPtr(name), name, arity, YAPModule.getCPtr(module), module, tabled, logical_updates, local, sourced, discontiguous, multiFile, hidden, untraceable, unspyable, meta, sync), true);
  }

  public YAPPrologPredicate(YAPAtom name, long arity, YAPModule module, boolean tabled, boolean logical_updates, boolean local, boolean sourced, boolean discontiguous, boolean multiFile, boolean hidden, boolean untraceable, boolean unspyable, boolean meta) {
    this(yapJNI.new_YAPPrologPredicate__SWIG_3(YAPAtom.getCPtr(name), name, arity, YAPModule.getCPtr(module), module, tabled, logical_updates, local, sourced, discontiguous, multiFile, hidden, untraceable, unspyable, meta), true);
  }

  public YAPPrologPredicate(YAPAtom name, long arity, YAPModule module, boolean tabled, boolean logical_updates, boolean local, boolean sourced, boolean discontiguous, boolean multiFile, boolean hidden, boolean untraceable, boolean unspyable) {
    this(yapJNI.new_YAPPrologPredicate__SWIG_4(YAPAtom.getCPtr(name), name, arity, YAPModule.getCPtr(module), module, tabled, logical_updates, local, sourced, discontiguous, multiFile, hidden, untraceable, unspyable), true);
  }

  public YAPPrologPredicate(YAPAtom name, long arity, YAPModule module, boolean tabled, boolean logical_updates, boolean local, boolean sourced, boolean discontiguous, boolean multiFile, boolean hidden, boolean untraceable) {
    this(yapJNI.new_YAPPrologPredicate__SWIG_5(YAPAtom.getCPtr(name), name, arity, YAPModule.getCPtr(module), module, tabled, logical_updates, local, sourced, discontiguous, multiFile, hidden, untraceable), true);
  }

  public YAPPrologPredicate(YAPAtom name, long arity, YAPModule module, boolean tabled, boolean logical_updates, boolean local, boolean sourced, boolean discontiguous, boolean multiFile, boolean hidden) {
    this(yapJNI.new_YAPPrologPredicate__SWIG_6(YAPAtom.getCPtr(name), name, arity, YAPModule.getCPtr(module), module, tabled, logical_updates, local, sourced, discontiguous, multiFile, hidden), true);
  }

  public YAPPrologPredicate(YAPAtom name, long arity, YAPModule module, boolean tabled, boolean logical_updates, boolean local, boolean sourced, boolean discontiguous, boolean multiFile) {
    this(yapJNI.new_YAPPrologPredicate__SWIG_7(YAPAtom.getCPtr(name), name, arity, YAPModule.getCPtr(module), module, tabled, logical_updates, local, sourced, discontiguous, multiFile), true);
  }

  public YAPPrologPredicate(YAPAtom name, long arity, YAPModule module, boolean tabled, boolean logical_updates, boolean local, boolean sourced, boolean discontiguous) {
    this(yapJNI.new_YAPPrologPredicate__SWIG_8(YAPAtom.getCPtr(name), name, arity, YAPModule.getCPtr(module), module, tabled, logical_updates, local, sourced, discontiguous), true);
  }

  public YAPPrologPredicate(YAPAtom name, long arity, YAPModule module, boolean tabled, boolean logical_updates, boolean local, boolean sourced) {
    this(yapJNI.new_YAPPrologPredicate__SWIG_9(YAPAtom.getCPtr(name), name, arity, YAPModule.getCPtr(module), module, tabled, logical_updates, local, sourced), true);
  }

  public YAPPrologPredicate(YAPAtom name, long arity, YAPModule module, boolean tabled, boolean logical_updates, boolean local) {
    this(yapJNI.new_YAPPrologPredicate__SWIG_10(YAPAtom.getCPtr(name), name, arity, YAPModule.getCPtr(module), module, tabled, logical_updates, local), true);
  }

  public YAPPrologPredicate(YAPAtom name, long arity, YAPModule module, boolean tabled, boolean logical_updates) {
    this(yapJNI.new_YAPPrologPredicate__SWIG_11(YAPAtom.getCPtr(name), name, arity, YAPModule.getCPtr(module), module, tabled, logical_updates), true);
  }

  public YAPPrologPredicate(YAPAtom name, long arity, YAPModule module, boolean tabled) {
    this(yapJNI.new_YAPPrologPredicate__SWIG_12(YAPAtom.getCPtr(name), name, arity, YAPModule.getCPtr(module), module, tabled), true);
  }

  public YAPPrologPredicate(YAPAtom name, long arity, YAPModule module) {
    this(yapJNI.new_YAPPrologPredicate__SWIG_13(YAPAtom.getCPtr(name), name, arity, YAPModule.getCPtr(module), module), true);
  }

  public YAPPrologPredicate(YAPAtom name, long arity) {
    this(yapJNI.new_YAPPrologPredicate__SWIG_14(YAPAtom.getCPtr(name), name, arity), true);
  }

  public SWIGTYPE_p_void assertClause(YAPTerm clause, boolean last, YAPTerm source) {
    long cPtr = yapJNI.YAPPrologPredicate_assertClause__SWIG_0(swigCPtr, this, YAPTerm.getCPtr(clause), clause, last, YAPTerm.getCPtr(source), source);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public SWIGTYPE_p_void assertClause(YAPTerm clause, boolean last) {
    long cPtr = yapJNI.YAPPrologPredicate_assertClause__SWIG_1(swigCPtr, this, YAPTerm.getCPtr(clause), clause, last);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public SWIGTYPE_p_void assertClause(YAPTerm clause) {
    long cPtr = yapJNI.YAPPrologPredicate_assertClause__SWIG_2(swigCPtr, this, YAPTerm.getCPtr(clause), clause);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public SWIGTYPE_p_void retractClause(YAPTerm skeleton, boolean all) {
    long cPtr = yapJNI.YAPPrologPredicate_retractClause__SWIG_0(swigCPtr, this, YAPTerm.getCPtr(skeleton), skeleton, all);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public SWIGTYPE_p_void retractClause(YAPTerm skeleton) {
    long cPtr = yapJNI.YAPPrologPredicate_retractClause__SWIG_1(swigCPtr, this, YAPTerm.getCPtr(skeleton), skeleton);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public SWIGTYPE_p_void clause(YAPTerm skeleton, YAPTerm body) {
    long cPtr = yapJNI.YAPPrologPredicate_clause(swigCPtr, this, YAPTerm.getCPtr(skeleton), skeleton, YAPTerm.getCPtr(body), body);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

}
